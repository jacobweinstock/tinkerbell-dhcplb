name: For each commit and PR
on:
  push:
  pull_request:

jobs:
  validation:
    runs-on: ubuntu-latest
    env:
      CGO_ENABLED: 0
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.14'
    - name: goimports
      run: go get golang.org/x/tools/cmd/goimports && goimports -d . | (! grep .)
    - name: go vet
      run: go vet ./...
#    - name: golangci-lint
#      uses: golangci/golangci-lint-action@v2
#      with:
#        version: v1.31
    - name: go test
      run: go test -v ./...
    - name: go test coverage
      run: go test -coverprofile=coverage.txt ./...
    - name: upload codecov
      run: bash <(curl -s https://codecov.io/bash)
  docker-images:
    runs-on: ubuntu-latest
    needs: [validation]
    steps:
    - name: Docker Image Tag for Sha
      id: docker-image-tag
      run: |
        echo ::set-output name=tags::quay.io/packet/cacher:latest,quay.io/packet/cacher:sha-${GITHUB_SHA::8}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Login to quay.io
      uses: docker/login-action@v1
      if: ${{ startsWith(github.ref, 'refs/heads/master') }}
      with:
        registry: quay.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.14'
    - name: Build binary
      run: make
    - name: quay.io/packet/cacher
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        cache-from: type=registry,ref=quay.io/packet/cacher:latest
        push: ${{ startsWith(github.ref, 'refs/heads/master') }}
        tags: ${{ steps.docker-image-tag.outputs.tags }}
        platforms: linux/amd64
